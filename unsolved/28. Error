/*
_graph _dfs01

https://a2oj.com/p?ID=28
verdict: TLE
Judge: A2OJ
*/
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define mp make_pair
#define all(c) begin(c), end(c)
#define eb push_back // tie, ignore, get<i>(a)
#define mem(a,val) memset(a, (val), sizeof a)
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))

#define rep(i,n) for(ll i = 0, _n = (n); i < _n; i++)
#define rep1(i,a,b) for(ll i = a, _b = (b); i <= _b; i++)
#define rep2(i,b,a) for(ll i = b, _a = (a); i >= _a; i--)

#define cout(d) cout << fixed << setprecision(d)
#define err(x) cerr << #x << " = " << x << '\n'

const ll inf = 1e16, mod = 1e9 + 7;
const double eps = 1e-16;
const int N = 26*26*26;

inline int h(string &s) {
    return 676 * (s[0] - 'A') + 26 * (s[1] - 'A') + (s[2] - 'A');
}
inline string str(int n) {string ans="";rep(i,3){ans=(char)('A'+n%26)+ans;n/=26;}return ans;}
vi t[N][2];
int in, fi, vis[N], book[N];
inline void dfs01() {
    int v, dis;
    
    deque<pii> q, qq;
    stack<int> vistemp;
    vis[in] = 1;
    q.push_back(mp(in,0));
    
    while(!q.empty()) {
        while(!q.empty()) {
            v = q.front().X; dis = q.front().Y; q.pop_front();
            //cout << "Processing " << str(v) << "@ " << dis << "\n";
            if(book[v] < dis) continue;
            
            if(v == fi) {
                cout << book[v] << '\n';
                return;
            }
            
            rep(k,2) {
                rep(i,t[v][k].size()) {
                    int ch = t[v][k][i];
                    if(!vis[ch]) {
                        vistemp.push(ch);
                        if(!k) qq.push_front(mp(ch,dis+k));
                        else qq.push_back(mp(ch,dis+k));
                        book[ch] = min((ll)book[ch], dis + k);
                    }
                }
            }
        }
        //cout << "Round completes\n";
        while(!vistemp.empty()) {
            vis[vistemp.top()] = 1;
            vistemp.pop();
        }
        q.swap(qq);
    }
    assert(0);
}

int tempv[10*N];
int main() {
    string s1, s2;
    int q; cin >> q;
    int n;
    mem(book, 1);
    while(q--) {
        n = 0;
        int m; cin >> m;
        while(m--) {
            cin >> s1 >> s2;
            t[h(s1)][1].eb(h(s2));
            t[h(s2)][1].eb(h(s1));
            tempv[n++] = h(s1);
            tempv[n++] = h(s2);
        }
        
        cin >> m >> s1;
        in = h(s1);
        while(m--) {
            cin >> s2;
            t[h(s1)][0].eb(h(s2));
            s1 = s2;
        }
        fi = h(s2);
        
        dfs01();
        rep(i,n) {
            int ch = tempv[i];
            t[ch][0].clear();
            t[ch][1].clear();
            book[ch] = 0x1010101;
            vis[ch] = 0;
        }
    }
    return 0;
}
